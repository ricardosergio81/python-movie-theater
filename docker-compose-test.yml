version: '3.7'

services:
  nginx:
    image: nginx:latest
    container_name: '${APP_NAME}_nginx_proxy'
    ports:
      - "${APP_PORT}:8080"
    volumes:
      - ./nginx_config.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - cast_service
      - movie_service
      - movie_theaters_service

  cast_service:
      build: ./cast-service
      container_name: '${APP_NAME}_cast_service'
      command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8000
      volumes:
        - ./cast-service/:/app/
      ports:
        - 8002:8000
      environment:
        - DATABASE_URI=postgresql://${DB_CAST_USER}:${DB_CAST_PASS}@cast_db/${DB_CAST}
      depends_on:
        - cast_db

  cast_db:
      image: postgres:12.1-alpine
      container_name: '${APP_NAME}_cast_db'
      volumes:
        - postgres_data_cast:/var/lib/postgresql/data/
      environment:
        - POSTGRES_USER=${DB_CAST_USER}
        - POSTGRES_PASSWORD=${DB_CAST_PASS}
        - POSTGRES_DB=${DB_CAST}

  movie_service:
    build: ./movie-service
    container_name: '${APP_NAME}_movie_service'
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8000
    volumes:
      - ./movie-service/:/app/
    ports:
      - 8001:8000
    environment:
      - DATABASE_URI=postgresql://${DB_MOVIE_USER}:${DB_MOVIE_PASS}@movie_db/${DB_MOVIE}
      - CAST_SERVICE_HOST_URL=http://cast_service:8000/api/v1/casts/
    depends_on:
      - movie_db

  movie_db:
    image: postgres:12.1-alpine
    container_name: '${APP_NAME}_movie_db'
    volumes:
      - postgres_data_movie:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${DB_MOVIE_USER}
      - POSTGRES_PASSWORD=${DB_MOVIE_PASS}
      - POSTGRES_DB=${DB_MOVIE}

  movie_theaters_service:
    build: ./movie-theater-service
    container_name: '${APP_NAME}_movie_theater_service'
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8000
    volumes:
      - ./movie-theater-service/:/app/
    ports:
      - 8003:8000
    environment:
      - DATABASE_URI=postgresql://${DB_MOVIE_THEATER_USER}:${DB_MOVIE_THEATER_PASS}@movie_theaters_db/${DB_MOVIE_THEATER}
      - MOVIE_SERVICE_HOST_URL=http://nginx:8080/api/v1/movies/
      - MOVIE_THEATER_SERVICE_HOST_URL=http://nginx:8080/api/v1/movies-theater/
    depends_on:
      - movie_theaters_db

  movie_theaters_db:
    image: postgres:12.1-alpine
    container_name: '${APP_NAME}_movie_theater_db'
    volumes:
      - postgres_data_movie_theaters:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${DB_MOVIE_THEATER_USER}
      - POSTGRES_PASSWORD=${DB_MOVIE_THEATER_PASS}
      - POSTGRES_DB=${DB_MOVIE_THEATER}

volumes:
  postgres_data_cast:
  postgres_data_movie:
  postgres_data_movie_theaters: